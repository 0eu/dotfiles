# Configuration for Alacritty, the GPU enhanced terminal emulator

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty it self.
env:
  # TERM variable
  #
  # This value is used to set the `$TERM` environment variable for
  # each instance of Alacritty. If it is not present, alacritty will
  # check the local terminfo database and use `alacritty` if it is
  # available, otherwise `xterm-256color` is used.
  TERM: xterm-256color
  LC_ALL: "en_US.UTF-8"

window:
  # Window dimensions in character columns and lines
  dimensions:
    columns: 100
    lines: 25

  # Window padding (changes require restart)
  #
  # Blank space added around the window in pixels. This padding is scaled
  # by DPI and the specified value is always added at both opposing sides.
  padding:
    x: 2
    y: 2

  dpi:
    x: 96
    y: 96

  # Some applications, like Emacs, rely on knowing about the width of a tab.
  # To prevent unexpected behavior in these applications, it's also required to
  # change the `it` value in terminfo when altering this setting.
  tabspaces: 8

  # If `true`, bold text is drawn using the bright color variants.
  draw_bold_text_with_bright_colors: true

  # Spread additional padding evenly around the terminal content.
  dynamic_padding: true

  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  #
  # Values for `decorations` (macOS only):
  #     - transparent: Title bar, transparent background and title bar buttons
  #     - buttonless: Title bar, transparent background, but no title bar buttons
  decorations: full

  # Startup Mode (changes require restart)
  #
  # Values for `startup_mode`:
  #   - Windowed
  #   - Maximized
  #   - Fullscreen
  #
  # Values for `startup_mode` (macOS only):
  #   - SimpleFullscreen
  startup_mode: Fullscreen

# Font configuration (changes require restart)
font:
  # The normal (roman) font face to use.
  normal:
    family: "JetBrains Mono"
    style: Regular
    # family: monospace # should be "Menlo" or something on macOS.
    # Style can be specified to pick a specific face.
    # style: Regular

  # The bold font face
  bold:
    family: "JetBrains Mono"
    style: Bold
    # family: monospace # should be "Menlo" or something on macOS.
    # Style can be specified to pick a specific face.
    # style: Bold

  # The italic font face
  italic:
    family: "JetBrains Mono"
    style: Italic
    # family: monospace # should be "Menlo" or something on macOS.
    # Style can be specified to pick a specific face.
    # style: Italic

  # Point size of the font
  size: 13.0

  # Offset is the extra space around each character. offset.y can be thought of
  # as modifying the linespacing, and offset.x as modifying the letter spacing.
  offset:
    x: 0 
    y: 0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increase the x offset to move the glyph to
  # the right, increase the y offset to move the glyph upward.
  glyph_offset:
    x: 0
    y: 0

  # OS X only: use thin stroke font rendering. Thin strokes are suitable
  # for retina displays, but for non-retina you probably want this set to
  # false.
  use_thin_strokes: true
# Colors (Tomorrow Night Bright)
colors:
  # Default colors
  primary:
    background: '0x1D1C27'
    foreground: '0xC8D1E3'

  # Colors the cursor will use if `custom_cursor_colors` is true
  cursor:
    text: '0x2B2A3B'
    cursor: '0xC8D1E3'

  # Normal colors
  normal:
    black:   '0x686B82'
    red:     '0xFF3E57'
    green:   '0x00FA8E'
    yellow:  '0xE5D781'
    blue:    '0x18A2FF'
    magenta: '0xCE63EC'
    cyan:    '0x47E3DD'
    white:   '0xC8D1E3'

  # Bright colors
  bright:
    black:   '0x2B2A3B'
    red:     '0xFF3E57'
    green:   '0x00FA8E'
    yellow:  '0xE5D781'
    blue:    '0x18A2FF'
    magenta: '0xCE63EC'
    cyan:    '0x47E3DD'
    white:   '0xEDEFF2'

  # Dim colors (Optional)
  dim:
￼   black:   '0x333333'
￼   red:     '0xf2777a'
￼   green:   '0x99cc99'
￼   yellow:  '0xffcc66'
￼   blue:    '0x6699cc'
￼   magenta: '0xcc99cc'
￼   cyan:    '0x66cccc'
￼   white:   '0xdddddd'

# Visual Bell
#
# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
# rung, the terminal background will be set to white and transition back to the
# default background color. You can control the rate of this transition by
# setting the `duration` property (represented in milliseconds). You can also
# configure the transition function by setting the `animation` property.
#
# Values for `animation`:
#   - Ease
#   - EaseOut
#   - EaseOutSine
#   - EaseOutQuad
#   - EaseOutCubic
#   - EaseOutQuart
#   - EaseOutQuint
#   - EaseOutExpo
#   - EaseOutCirc
#   - Linear
#
# Specifying a `duration` of `0` will disable the visual bell.
visual_bell:
  animation: EaseOutExpo
  duration: 0

key_bindings:
  - { key: V,        mods: Control|Shift,    action: Paste               }
  - { key: C,        mods: Control|Shift,    action: Copy                }
  - { key: Q,        mods: Command, action: Quit                         }
  - { key: Left,     mods: Shift,   chars: "\x1b[1;2D"                   }
  - { key: Left,     mods: Control, chars: "\x1b[1;5D"                   }
  - { key: Left,     mods: Alt,     chars: "\x1b[1;3D"                   }
  - { key: Left,                    chars: "\x1b[D",   mode: ~AppCursor  }
  - { key: Left,                    chars: "\x1bOD",   mode: AppCursor   }
  - { key: Right,    mods: Shift,   chars: "\x1b[1;2C"                   }
  - { key: Right,    mods: Control, chars: "\x1b[1;5C"                   }
  - { key: Right,    mods: Alt,     chars: "\x1b[1;3C"                   }
  - { key: Right,                   chars: "\x1b[C",   mode: ~AppCursor  }
  - { key: Right,                   chars: "\x1bOC",   mode: AppCursor   }
  - { key: Up,       mods: Shift,   chars: "\x1b[1;2A"                   }
  - { key: Up,       mods: Control, chars: "\x1b[1;5A"                   }
  - { key: Up,       mods: Alt,     chars: "\x1b[1;3A"                   }
  - { key: Up,                      chars: "\x1b[A",   mode: ~AppCursor  }
  - { key: Up,                      chars: "\x1bOA",   mode: AppCursor   }
  - { key: Down,     mods: Shift,   chars: "\x1b[1;2B"                   }
  - { key: Down,     mods: Control, chars: "\x1b[1;5B"                   }
  - { key: Down,     mods: Alt,     chars: "\x1b[1;3B"                   }
  - { key: Down,                    chars: "\x1b[B",   mode: ~AppCursor  }
  - { key: Down,                    chars: "\x1bOB",   mode: AppCursor   }
  - { key: Tab,      mods: Shift,   chars: "\x1b[Z"                      }
  - { key: Back,     mods: Alt,     chars: "\x1b\x7f"                    }
  - { key: F,  mods: Alt,           chars: "\x1bf"                       }
  - { key: B,  mods: Alt,           chars: "\x1bb"                       }

selection:
  semantic_escape_chars: ",│`|:\"' ()[]{}<>"

hide_cursor_when_typing: false
